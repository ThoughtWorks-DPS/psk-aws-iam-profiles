---
version: 2.1

orbs:
  #checkov:skip=CKV_CIRCLECIPIPELINES_3
  terraform: twdps/terraform@2.0.4
  op: twdps/onepassword@2.0.6
  do: twdps/pipeline-events@3.2.2

# ============================================================ pipeline globals

globals:
  - &context empc-lab
  - &executor-image twdps/circleci-infra-aws:alpine-5.1.0

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

# ============================================================ commands and jobs

commands:

  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      account:
        description: account to be configured
        type: string
    steps:
      - op/env:
          env-file: op.<< parameters.account >>.env
      - run:
          name: set ~/.terraformrc
          command: op inject -i tpl/terraformrc.tpl -o ~/.terraformrc
      - run:
          name: set << parameters.account >> environment variables
          command: op inject -i environments/<< parameters.account >>.auto.tfvars.json.tpl -o << parameters.account >>.auto.tfvars.json

  aws-integration-tests:
    parameters:
      account:
        description: for EMPC Labs this is either nonprod or prod
        type: string
    steps:
      - run:
          name: InSpec tests of managed AWS resources
          command: bash scripts/run_awspec_integration_tests.sh << parameters.account >>

  rotate-service-account-credentials:
    parameters:
      account:
        description: for EMPC Labs, this is either nonprod or prod
        type: string
    steps:
      - run:
          name: create or rotate the service account credentials
          command: bash scripts/rotate_svc_acct_credentials.sh << parameters.account >>

jobs:

  recurring-integration-tests:
    description: |
      Recurring job (weekly) to run pipeline integration tests to detect aws configuration drift
    docker:
      - image: *executor-image
    environment:
      TF_WORKSPACE: << parameters.account >>
    shell: op run --env-file op.<< parameters.account >>.env -- /bin/sh -eo pipefail
    parameters:
      account:
        description: nonprod or production account configuration
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - set-environment:
          account: << parameters.account >>
      - rotate-service-account-credentials:
          account: << parameters.account >>
      - aws-integration-tests:
          account: << parameters.account >>

  rotate-credentials:
    description: Recurring job (weekly) to rotate PSK service account credentials
    docker:
      - image: *executor-image
    environment:
      TF_WORKSPACE: nonprod
    shell: op run --env-file op.nonprod.env -- /bin/sh -eo pipefail
    steps:
      - checkout
      - setup_remote_docker
      - set-environment:
          account: nonprod
      - rotate-service-account-credentials:
          account: nonprod

# ============================================================ workflows

workflows:

  deploy psk profiles and roles to nonprod:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - terraform/static-analysis:
          name: static code analysis
          context: *context
          executor-image: *executor-image
          workspace: nonprod
          tflint-scan: true
          tflint-provider: aws
          trivy-scan: true
          before-static-analysis:
            - op/env:
                env-file: op.nonprod.env
          filters: *on-push-main

      - terraform/plan:
          name: nonprod change plan
          context: *context
          executor-image: *executor-image
          workspace: nonprod
          checkov-scan: true
          before-plan:
            - set-environment:
                account: nonprod
          filters: *on-push-main

      - approve nonprod changes:
          type: approval
          requires:
            - static code analysis
            - nonprod change plan
          filters: *on-push-main

      - terraform/apply:
          name: apply nonprod changes
          context: *context
          workspace: nonprod
          before-apply:
            - set-environment:
                account: nonprod
          after-apply:
            - aws-integration-tests:
                account: nonprod
            - rotate-service-account-credentials:
                account: nonprod
          requires:
            - approve nonprod changes
          filters: *on-push-main

  deploy roles to prod:
    jobs:
      - terraform/plan:
          name: prod change plan
          context: *context
          executor-image: *executor-image
          workspace: prod
          checkov-scan: true
          before-plan:
            - set-environment:
                account: prod
          filters: *on-tag-main

      - approve prod changes:
          type: approval
          requires:
            - prod change plan
          filters: *on-tag-main

      - terraform/apply:
          name: apply prod changes
          context: *context
          workspace: prod
          before-apply:
            - set-environment:
                account: prod
          after-apply:
            - aws-integration-tests:
                account: prod
            - do/slack-bot:
                channel: lab-events
                message: Release psk-aws-iam-profiles
                include-link: true
                include-tag: true
          requires:
            - approve prod changes
          filters: *on-tag-main

  schedule weekly rotation and integration test:
    jobs:
      - do/schedule-pipeline:
          name: weekly integration test and rotation
          context: *context
          scheduled-pipeline-name: weekly-integration-test
          scheduled-pipeline-description: |
            Weekly, automated run of iam-credential-rotation and iam-profiles integration tests.
          hours-of-day: "[1]"
          days-of-week: "[\"SUN\"]"
          before-schedule:
            - op/env:
                env-file: op.prod.env
          filters: *on-tag-main

  weekly integration test:
    when:
      equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - recurring-integration-tests:
          name: AWS integration test and Nonprod Svc Acct rotation
          context: *context
          account: nonprod
      - recurring-integration-tests:
          name: AWS integration test and Prod Svc Acct rotation
          context: *context
          account: prod
      - rotate-credentials:
          name: Rotate PSK service account credentials
          context: *context
